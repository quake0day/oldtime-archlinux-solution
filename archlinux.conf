require "oldtime/rsync"

configure <<EOF
  backup:
    rsync.options = "-azHX -r --stats --progress -vh --del --delete-excluded --numeric-ids"

  restore:
    rsync.options = "-azHX -r --stats --progress -vh --numeric-ids"
EOF

before do
  check_mountpoint Rc.media
  check_root
end

backup do
  # package list
  system %~pacman -Qqe | grep -vx "$(pacman -Qqm)" > #{Rc.p.oldtime}/pkg.lst~, :verbose => true
  system %~pacman -Qqm > #{Rc.p.oldtime}/aur.lst~, :verbose => true

  rsync2 "backup.oldtime"
  rsync2 "backup.etc"
  rsync2 "backup.machine_etc"
  rsync2 "backup.pkg"
  rsync2 "backup.root"
end

restore :system do
  rsync "<%=Rc.media%>/ywank.oldtime/ /"
  rsync "<%=Rc.media%>/ywank.pkg/ /"
  system "repo-add /home/pkg/custom.db.tar.gz /home/pkg/*.pkg.tar.xz", :verbose => true
  system "pacman -Sy", :verbose => true
end

restore :etc do
  rsync "<%=Rc.media%>/ywank.etc/ /"
end

restore :root do
  rsync "<%=Rc.media%>/ywank.root/ /"
end

after :on => "backup" do
  system "umount #{Rc.media}", :verbose => true
  sleep 60
end

# vim: ft=ruby
